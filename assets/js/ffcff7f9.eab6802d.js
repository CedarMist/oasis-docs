"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[5954],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,k=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return t?a.createElement(k,i(i({ref:n},u),{},{components:t})):a.createElement(k,i({ref:n},u))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,i=new Array(s);i[0]=m;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r[d]="string"==typeof e?e:o,i[1]=r;for(var c=2;c<s;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9882:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var a=t(7462),o=(t(7294),t(3905));const s={},i="oasis-node CLI",r={unversionedId:"core/oasis-node/cli",id:"core/oasis-node/cli",title:"oasis-node CLI",description:"Setup",source:"@site/docs/core/oasis-node/cli.md",sourceDirName:"core/oasis-node",slug:"/core/oasis-node/cli",permalink:"/core/oasis-node/cli",draft:!1,editUrl:"https://github.com/oasisprotocol/oasis-core/edit/stable/22.2.x/docs/oasis-node/cli.md",tags:[],version:"current",lastUpdatedAt:1686130335,formattedLastUpdatedAt:"Jun 7, 2023",frontMatter:{},sidebar:"oasisCore",previous:{title:"Metrics",permalink:"/core/oasis-node/metrics"},next:{title:"Common Functionality",permalink:"/core/common-functionality"}},l={},c=[{value:"Setup",id:"setup",level:2},{value:"Server commands",id:"server-commands",level:3},{value:"Local commands",id:"local-commands",level:3},{value:"JSON pretty-printing",id:"json-pretty-printing",level:3},{value:"Common CLI Flags",id:"common-cli-flags",level:3},{value:"Base Flags",id:"base-flags",level:4},{value:"Signer Flags",id:"signer-flags",level:4},{value:"Storing Base and Signer flags in an Environment Variable",id:"storing-base-and-signer-flags-in-an-environment-variable",level:4},{value:"Common Transaction Flags",id:"common-transaction-flags",level:4},{value:"<code>control</code>",id:"control",level:2},{value:"<code>status</code>",id:"status",level:3},{value:"<code>genesis</code>",id:"genesis",level:2},{value:"<code>check</code>",id:"check",level:3},{value:"<code>dump</code>",id:"dump",level:3},{value:"<code>init</code>",id:"init",level:3},{value:"<code>stake</code>",id:"stake",level:2},{value:"<code>account</code>",id:"account",level:3},{value:"<code>info</code>",id:"info",level:4},{value:"<code>list</code>",id:"list",level:3},{value:"<code>nonce</code>",id:"nonce",level:3},{value:"Get Your Entity&#39;s Nonce",id:"get-your-entitys-nonce",level:4},{value:"<code>pubkey2address</code>",id:"pubkey2address",level:3},{value:"<code>gen_transfer</code>",id:"gen_transfer",level:3},{value:"Query Our Account&#39;s Info",id:"query-our-accounts-info",level:4},{value:"Query Destination Account&#39;s Info",id:"query-destination-accounts-info",level:4},{value:"Generate a Transfer Transaction",id:"generate-a-transfer-transaction",level:4},{value:"Submit the Transaction",id:"submit-the-transaction",level:4},{value:"Query Both Accounts&#39; Info",id:"query-both-accounts-info",level:4},{value:"<code>gen_escrow</code>",id:"gen_escrow",level:3},{value:"Query Our Account&#39;s Info",id:"query-our-accounts-info-1",level:4},{value:"Generate an Escrow Transaction",id:"generate-an-escrow-transaction",level:4},{value:"Submit the Transaction",id:"submit-the-transaction-1",level:4},{value:"Query Our Account&#39;s Info Again",id:"query-our-accounts-info-again",level:4},{value:"Computation of Shares",id:"computation-of-shares",level:4},{value:"<code>gen_reclaim_escrow</code>",id:"gen_reclaim_escrow",level:3},{value:"Query Our Account&#39;s Info",id:"query-our-accounts-info-2",level:4},{value:"Generate a Reclaim Escrow Transaction",id:"generate-a-reclaim-escrow-transaction",level:4},{value:"Submit the Transaction",id:"submit-the-transaction-2",level:4},{value:"Query Our Account&#39;s Info Again",id:"query-our-accounts-info-again-1",level:4},{value:"Computation of Reclaimed Tokens",id:"computation-of-reclaimed-tokens",level:4},{value:"Debonding Period",id:"debonding-period",level:4},{value:"<code>gen_cast_vote</code>",id:"gen_cast_vote",level:3},{value:"Listing Active Proposals",id:"listing-active-proposals",level:4},{value:"View Votes for a Proposal",id:"view-votes-for-a-proposal",level:4},{value:"Voting for a Proposal",id:"voting-for-a-proposal",level:4},{value:"Submit the Transaction",id:"submit-the-transaction-3",level:4},{value:"<code>gen_amend_commission_schedule</code>",id:"gen_amend_commission_schedule",level:3},{value:"Commission Schedule Rules",id:"commission-schedule-rules",level:4},{value:"Query Our Account&#39;s Info",id:"query-our-accounts-info-3",level:4},{value:"Generate an Amend Commission Schedule Transaction",id:"generate-an-amend-commission-schedule-transaction",level:4},{value:"Submit the Transaction",id:"submit-the-transaction-4",level:4},{value:"Query Our Account&#39;s Info Again",id:"query-our-accounts-info-again-2",level:4},{value:"Setting a More Complex Commission Schedule",id:"setting-a-more-complex-commission-schedule",level:4}],u={toc:c},d="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"oasis-node-cli"},(0,o.kt)("inlineCode",{parentName:"h1"},"oasis-node")," CLI"),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("h3",{id:"server-commands"},"Server commands"),(0,o.kt)("p",null,"To run a command that requires a connection to an online Oasis node (i.e. the\n",(0,o.kt)("inlineCode",{parentName:"p"},"server"),"), you need to either:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"change the working directory to where the internal Oasis node UNIX socket is\nlocated (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"/serverdir/node/"),") before executing the command, or"),(0,o.kt)("li",{parentName:"ul"},"pass the ",(0,o.kt)("inlineCode",{parentName:"li"},"-a $ADDR")," flag where ",(0,o.kt)("inlineCode",{parentName:"li"},"ADDR")," represents the path to the internal\nOasis node UNIX socket prefixed with ",(0,o.kt)("inlineCode",{parentName:"li"},"unix:"),"\n(e.g.",(0,o.kt)("inlineCode",{parentName:"li"},"unix:/serverdir/node/internal.sock"),").")),(0,o.kt)("p",null,"Here are some examples of Oasis Node CLI commands that need a connection to an\nonline Oasis node:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis-node stake info"),": Shows general staking information."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis-node stake list"),": Lists all accounts with positive balance."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis-node stake account info"),": Shows detailed information for an account."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis-node consensus submit_tx"),": Submits a pre-generated transaction to the\nnetwork.")),(0,o.kt)("h3",{id:"local-commands"},"Local commands"),(0,o.kt)("p",null,"The following commands are intended to be run on your local machine and only\nneed access to the ",(0,o.kt)("a",{parentName:"p",href:"/node/mainnet/"},"network's current genesis file")," and your signer's private\nkey:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis-node stake account gen_transfer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis-node stake account gen_escrow")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis-node stake account gen_reclaim_escrow")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis-node stake account gen_amend_commission_schedule"))),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"We strongly suggest that you do not use any entity/staking account that is\ngenerated with the file-based signer on the Mainnet."),(0,o.kt)("p",{parentName:"admonition"},"In case you need to use the file-based signer, make sure you only use it on an\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Air_gap_(networking)"},"offline/air-gapped machine"),". Gaining access to your entity's/staking account's\nprivate key can compromise your tokens.")),(0,o.kt)("h3",{id:"json-pretty-printing"},"JSON pretty-printing"),(0,o.kt)("p",null,"We will pipe the output of commands that return JSON through the\nPython's ",(0,o.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/json.html#module-json.tool"},(0,o.kt)("inlineCode",{parentName:"a"},"json.tool")," module")," to pretty-print it."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Be aware that ",(0,o.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq/"},"jq"),", the popular JSON CLI tool,\nconverts all numbers to\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/stedolan/jq/wiki/FAQ#caveats"},"IEEE 754 64-bit values")," which\ncan result in silent loss of precision and/or other changes."),(0,o.kt)("p",{parentName:"admonition"},"Hence, we recommend avoiding its usage until this issue is resolved.")),(0,o.kt)("h3",{id:"common-cli-flags"},"Common CLI Flags"),(0,o.kt)("h4",{id:"base-flags"},"Base Flags"),(0,o.kt)("p",null,"All commands for generating and signing transactions need the following base\nflags set:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--genesis.file"),": Path to the genesis file, e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"/localhostdir/genesis.json"),".")),(0,o.kt)("p",null,"For convenience, set the ",(0,o.kt)("inlineCode",{parentName:"p"},"GENESIS_FILE")," environment value to its value, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  GENESIS_FILE=/localhostdir/genesis.json\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--signer.dir"),": Path to entity's artifacts directory,\ne.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"entity-$LEDGER_INDEX")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"/localhostdir/entity/"))),(0,o.kt)("h4",{id:"signer-flags"},"Signer Flags"),(0,o.kt)("p",null,"Currently, we provide two options for signing transactions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Ledger-based signer.")),(0,o.kt)("p",{parentName:"li"},"You will need to set it up as described in our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/oasisprotocol/oasis-core-ledger/blob/master/docs/usage/transactions.md"},"Oasis Core Ledger")," docs.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"File-based signer.")),(0,o.kt)("p",{parentName:"li"},"You will need to create your Entity as described in the\n",(0,o.kt)("a",{parentName:"p",href:"/node/run-your-node/validator-node#creating-your-entity"},"Running a Node on the Network")," docs and set the following flags:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--signer.backend file"),": Specifies use of the file signer.")))),(0,o.kt)("h4",{id:"storing-base-and-signer-flags-in-an-environment-variable"},"Storing Base and Signer flags in an Environment Variable"),(0,o.kt)("p",null,"To make the transaction commands shorter and avoid typing errors, one can create\nan environment variable, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"TX_FLAGS"),", with all the\n",(0,o.kt)("a",{parentName:"p",href:"#base-flags"},"Base Flags")," and ",(0,o.kt)("a",{parentName:"p",href:"#signer-flags"},"Signer Flags"),"\nconfigured for his particular set up."),(0,o.kt)("p",null,"For example, one could set ",(0,o.kt)("inlineCode",{parentName:"p"},"TX_FLAGS")," for a Ledger device like below (make sure\nall ",(0,o.kt)("inlineCode",{parentName:"p"},"LEDGER_*")," environment variables are set appropriately):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'TX_FLAGS=(--genesis.file "$GENESIS_FILE"\n  --signer.dir /localhostdir/entity\n  --signer.backend plugin\n  --signer.plugin.name ledger\n  --signer.plugin.path "$LEDGER_SIGNER_PATH"\n)\n')),(0,o.kt)("p",null,"Or, one could set ",(0,o.kt)("inlineCode",{parentName:"p"},"TX_FLAGS")," like below to use a file signer:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'TX_FLAGS=(--genesis.file "$GENESIS_FILE"\n  --signer.backend file\n  --signer.dir /localhostdir/entity/\n)\n')),(0,o.kt)("h4",{id:"common-transaction-flags"},"Common Transaction Flags"),(0,o.kt)("p",null,"When generating a transaction, one needs to set the following transaction flags\nas appropriate for a given transaction:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--stake.amount"),": Amount of base units to transfer, escrow, burn, etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--transaction.file"),": Path to the file where to store the generated\ntransaction."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--transaction.nonce"),": Incremental number that must be unique for each\naccount's transaction. To get your current account's nonce, see\n",(0,o.kt)("a",{parentName:"li",href:"#nonce"},"Checking Your Account nonce")," doc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--transaction.fee.gas"),": Maximum amount of gas (in ",(0,o.kt)("em",{parentName:"li"},"gas units"),") a transaction\ncan spend.")),(0,o.kt)("p",null,"Gas costs for different staking transactions are specified by the\n",(0,o.kt)("inlineCode",{parentName:"p"},"staking.params.gas_costs")," consensus parameter."),(0,o.kt)("p",null,"To obtain its value from the genesis file, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'  cat $GENESIS_FILE | \\\n    python3 -c \'import sys, json; \\\n    print(json.dumps(json.load(sys.stdin)["staking"]["params"]["gas_costs"], indent=4))\'\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--transaction.fee.amount"),": Amount of base units we will pay as a fee for a\ntransaction.")),(0,o.kt)("p",null,"Note that specifying a transaction's fee amount (via ",(0,o.kt)("inlineCode",{parentName:"p"},"--transaction.fee.amount"),")\nand maximum gas amount (via ",(0,o.kt)("inlineCode",{parentName:"p"},"--transaction.fee.gas"),") implicitly defines the\n",(0,o.kt)("em",{parentName:"p"},"gas price")," (in base units):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"gas_price = fee_amount / gas_amount\n")),(0,o.kt)("p",null,"Gas price tells how much base units we are willing to pay for one gas unit."),(0,o.kt)("p",null,"Consensus validators can configure their own ",(0,o.kt)("em",{parentName:"p"},"minimum gas price"),"\n(via ",(0,o.kt)("inlineCode",{parentName:"p"},"consensus.tendermint.min_gas_price")," configuration flag) and will refuse to\nprocess transactions that have their gas price set below their minimum gas\nprice."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Currently, there is no mechanism to discover what minimum gas prices are used\nby validators."),(0,o.kt)("p",{parentName:"admonition"},"For more details, see\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/oasisprotocol/oasis-core/issues/2526"},"Oasis Core #2526"),".")),(0,o.kt)("h2",{id:"control"},(0,o.kt)("inlineCode",{parentName:"h2"},"control")),(0,o.kt)("h3",{id:"status"},(0,o.kt)("inlineCode",{parentName:"h3"},"status")),(0,o.kt)("p",null,"Run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"oasis-node control status --address unix:/path/to/node/internal.sock\n")),(0,o.kt)("p",null,"to get information like the following (example taken from a runtime compute\nnode):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "software_version": "21.3",\n  "identity": {\n    "node": "iWq6Nft6dU2GWAr9U7ICbhXWwmAINIniKzMMblSo5Xs=",\n    "p2p": "dGd+pGgIlkJb0dnkBQ7vI2EWWG81pF5M1G+jL2/6pyA=",\n    "consensus": "QaMdKVwX1da0Uf82cp0DDukQQwrSjr8BwlIxc//ANE8=",\n    "tls": [\n      "Kj8ANHwfMzcWoA1vx0OMhn4oGv8Y0vc46xMOdQUIh5c=",\n      "1C8rWqyuARkSxNXuPbDPh9XID/SiYAU3GxGk6nMwR0Q="\n    ]\n  },\n  "consensus": {\n    "version": {\n      "major": 4\n    },\n    "backend": "tendermint",\n    "features": 3,\n    "node_peers": [\n      "5ab8074ce3053ef9b72d664c73e39972241442e3@57.71.39.73:26658",\n      "abb66e8780f3815d87bad488a2892b4d4b2221e3@108.15.34.59:50716"\n    ],\n    "latest_height": 5960191,\n    "latest_hash": "091c29c3d588c52421a4f215268c6b4ab1a7762c429a98fec5de9251f8907add",\n    "latest_time": "2021-09-24T21:42:29+02:00",\n    "latest_epoch": 10489,\n    "latest_state_root": {\n      "ns": "0000000000000000000000000000000000000000000000000000000000000000",\n      "version": 5960190,\n      "root_type": 1,\n      "hash": "c34581dcec59d80656d6082260d63f3206aef0a1b950c1f2c06d1eaa36a22ec3"\n    },\n    "genesis_height": 5891596,\n    "genesis_hash": "e9d9fb99baefc3192a866581c35bf43d7f0499c64e1c150171e87b2d5dc35087",\n    "last_retained_height": 5891596,\n    "last_retained_hash": "e9d9fb99baefc3192a866581c35bf43d7f0499c64e1c150171e87b2d5dc35087",\n    "chain_context": "9ee492b63e99eab58fd979a23dfc9b246e5fc151bfdecd48d3ba26a9d0712c2b",\n    "is_validator": true\n  },\n  "runtimes": {\n    "0000000000000000000000000000000000000000000000000000000000000001": {\n      "descriptor": {\n        "v": 2,\n        "id": "0000000000000000000000000000000000000000000000000000000000000001",\n        "entity_id": "Ldzg8aeLiUBrMYxidd5DqEzpamyV2cprmRH0pG8d/Jg=",\n        "genesis": {\n          "state_root": "c672b8d1ef56ed28ab87c3622c5114069bdd3ad7b8f9737498d0c01ecef0967a",\n          "state": null,\n          "storage_receipts": null,\n          "round": 0\n        },\n        "kind": 1,\n        "tee_hardware": 0,\n        "versions": {\n          "version": {\n            "minor": 2\n          }\n        },\n        "executor": {\n          "group_size": 3,\n          "group_backup_size": 3,\n          "allowed_stragglers": 1,\n          "round_timeout": 5,\n          "max_messages": 256\n        },\n        "txn_scheduler": {\n          "algorithm": "simple",\n          "batch_flush_timeout": 1000000000,\n          "max_batch_size": 100,\n          "max_batch_size_bytes": 1048576,\n          "propose_batch_timeout": 2\n        },\n        "storage": {\n          "group_size": 3,\n          "min_write_replication": 2,\n          "max_apply_write_log_entries": 10000,\n          "max_apply_ops": 2,\n          "checkpoint_interval": 100,\n          "checkpoint_num_kept": 2,\n          "checkpoint_chunk_size": 8388608\n        },\n        "admission_policy": {\n          "any_node": {}\n        },\n        "constraints": {\n          "executor": {\n            "backup-worker": {\n              "max_nodes": {\n                "limit": 1\n              },\n              "min_pool_size": {\n                "limit": 3\n              }\n            },\n            "worker": {\n              "max_nodes": {\n                "limit": 1\n              },\n              "min_pool_size": {\n                "limit": 3\n              }\n            }\n          },\n          "storage": {\n            "worker": {\n              "max_nodes": {\n                "limit": 1\n              },\n              "min_pool_size": {\n                "limit": 3\n              }\n            }\n          }\n        },\n        "staking": {},\n        "governance_model": "entity"\n      },\n      "latest_round": 1355,\n      "latest_hash": "2a11820c0524a8a753f7f4a268ee2d0a4f4588a89121f92a43f4be9cc6acca7e",\n      "latest_time": "2021-09-24T21:41:29+02:00",\n      "latest_state_root": {\n        "ns": "0000000000000000000000000000000000000000000000000000000000000000",\n        "version": 1355,\n        "root_type": 1,\n        "hash": "45168e11548ac5322a9a206abff4368983b5cf676b1bcb2269f5dfbdf9df7be3"\n      },\n      "genesis_round": 0,\n      "genesis_hash": "aed94c03ebd2d16dfb5f6434021abf69c8c15fc69b6b19554d23da8a5a053776",\n      "committee": {\n        "latest_round": 1355,\n        "latest_height": 5960180,\n        "last_committee_update_height": 5960174,\n        "executor_roles": [\n          "worker",\n          "backup-worker"\n        ],\n        "storage_roles": [\n          "worker"\n        ],\n        "is_txn_scheduler": false,\n        "peers": [\n          "/ip4/57.71.39.73/tcp/41002/p2p/12D3KooWJvL8mYzHbcLtj91bf5sHhtrB7C8CWND5sV6Kk24eUdpQ",\n          "/ip4/108.67.32.45/tcp/26648/p2p/12D3KooWBKgcH7TGMSLuxzLxK41nTwk6DsxHRpb7HpWQXJzLurcv"\n        ]\n      },\n      "storage": {\n        "last_finalized_round": 1355\n      }\n    }\n  },\n  "registration": {\n    "last_registration": "2021-09-24T21:41:08+02:00",\n    "descriptor": {\n      "v": 1,\n      "id": "iWq6Nft6dU2GWAr9U7ICbhXWwmAINIniKzMMblSo5Xs=",\n      "entity_id": "4G4ISI8hANvMRYTbxdXU+0r9m/6ZySHERR+2RDbNOU8=",\n      "expiration": 10491,\n      "tls": {\n        "pub_key": "Kj8ANHwfMzcWoA1vx0OMhn4oGv8Y0vc46xMOdQUIh5c=",\n        "next_pub_key": "1C8rWqyuARkSxNXuPbDPh9XID/SiYAU3GxGk6nMwR0Q=",\n        "addresses": [\n          "Kj8ANHwfMzcWoA1vx0OMhn4oGv8Y0vc46xMOdQUIh5c=@128.89.215.24:30001",\n          "1C8rWqyuARkSxNXuPbDPh9XID/SiYAU3GxGk6nMwR0Q=@128.89.215.24:30001"\n        ]\n      },\n      "p2p": {\n        "id": "dGd+pGgIlkJb0dnkBQ7vI2EWWG81pF5M1G+jL2/6pyA=",\n        "addresses": [\n          "159.89.215.24:30002"\n        ]\n      },\n      "consensus": {\n        "id": "QaMdKVwX1da0Uf82cp0DDukQQwrSjr8BwlIxc//ANE8=",\n        "addresses": [\n          "dGd+pGgIlkJb0dnkBQ7vI2EWWG81pF5M1G+jL2/6pyA=@128.89.215.24:26656"\n        ]\n      },\n      "beacon": {\n        "point": "BHg8TOqKD4wV8UCu9nICvJt7rhXFd8CxXuYiHa6X/NnzlIndzGNEJyyTr00s5rgKwX25yPmv+r2xRFbcQK6hGLE="\n      },\n      "runtimes": [\n        {\n          "id": "0000000000000000000000000000000000000000000000000000000000000001",\n          "version": {\n            "minor": 2\n          },\n          "capabilities": {},\n          "extra_info": null\n        }\n      ],\n      "roles": "compute,storage,validator"\n    },\n    "node_status": {\n      "expiration_processed": false,\n      "freeze_end_time": 0,\n      "election_eligible_after": 9810\n    }\n  },\n  "pending_upgrades": []\n}\n')),(0,o.kt)("h2",{id:"genesis"},(0,o.kt)("inlineCode",{parentName:"h2"},"genesis")),(0,o.kt)("h3",{id:"check"},(0,o.kt)("inlineCode",{parentName:"h3"},"check")),(0,o.kt)("p",null,"To check if a given ",(0,o.kt)("a",{parentName:"p",href:"/core/consensus/genesis#genesis-file"},"genesis file")," is valid, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"oasis-node genesis check --genesis.file /path/to/genesis.json\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This also checks if the genesis file is in the ",(0,o.kt)("a",{parentName:"p",href:"/core/consensus/genesis#canonical-form"},"canonical form"),".")),(0,o.kt)("h3",{id:"dump"},(0,o.kt)("inlineCode",{parentName:"h3"},"dump")),(0,o.kt)("p",null,"To dump the state of the network at a specific block height, e.g. 717600, to a\n",(0,o.kt)("a",{parentName:"p",href:"/core/consensus/genesis#genesis-file"},"genesis file"),", run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"oasis-node genesis dump \\\n  --address unix:/path/to/node/internal.sock \\\n  --genesis.file /path/to/genesis_dump.json \\\n  --height 717600\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"You must only run the following command after the given block height has been\nreached on the network.")),(0,o.kt)("h3",{id:"init"},(0,o.kt)("inlineCode",{parentName:"h3"},"init")),(0,o.kt)("p",null,"To initialize a new ",(0,o.kt)("a",{parentName:"p",href:"/core/consensus/genesis#genesis-file"},"genesis file")," with the given chain id and ",(0,o.kt)("a",{parentName:"p",href:"/core/consensus/services/staking#tokens-and-base-units"},"staking token\nsymbol"),", run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'oasis-node genesis init --genesis.file /path/to/genesis.json \\\n  --chain.id "name-of-my-network" \\\n  --staking.token_symbol TEST\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can set a lot of parameters for the various ",(0,o.kt)("a",{parentName:"p",href:"/core/consensus/"},"consensus layer services"),"."),(0,o.kt)("p",{parentName:"admonition"},"To see the full list, run:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"oasis-node genesis init --help\n"))),(0,o.kt)("h2",{id:"stake"},(0,o.kt)("inlineCode",{parentName:"h2"},"stake")),(0,o.kt)("h3",{id:"account"},(0,o.kt)("inlineCode",{parentName:"h3"},"account")),(0,o.kt)("h4",{id:"info"},(0,o.kt)("inlineCode",{parentName:"h4"},"info")),(0,o.kt)("p",null,"Run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"oasis-node stake account info \\\n  --stake.account.address <account address> \\\n  --address unix:/path/to/node/internal.sock\n")),(0,o.kt)("p",null,"to get staking information for a specific account:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: TEST 0.0\n  Nonce: 0\nEscrow Account:\n  Active:\n    Balance: TEST 0.0\n    Total Shares: 0\n  Debonding:\n    Balance: TEST 0.0\n    Total Shares: 0\n  Commission Schedule:\n    Rates: (none)\n    Rate Bounds: (none)\n  Stake Accumulator:\n    Claims:\n      - Name: registry.RegisterEntity\n        Staking Thresholds:\n          - Global: entity\n      - Name: registry.RegisterNode.LQu4ZtFg8OJ0MC4M4QMeUR7Is6Xt4A/CW+PK/7TPiH0=\n        Staking Thresholds:\n          - Global: node-validator\n")),(0,o.kt)("h3",{id:"list"},(0,o.kt)("inlineCode",{parentName:"h3"},"list")),(0,o.kt)("p",null,"To list all staking accounts with positive balance, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node stake list \\\n  --address unix:/path/to/node/internal.sock\n")),(0,o.kt)("p",null,"This will list all accounts' addresses, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"oasis1qqqfalz4xars9nxn0mjy8fcf9quqg8ml0szm5ped\noasis1qqqd4wrmk8z9p3hz0vyc6zy3khx3gqnckywyg2s5\noasis1qqqul8678xs9tnj74x54k8ch2qdh7jveeswqf67j\noasis1qqzrcyed78mkxmt9qpv3pemsugknnhvnpv8v5vc3\noasis1qqz0qcmy932p69493qdkszcf9emgl55azys3xr8f\noasis1qq95xthkg20ra6ue8zyngqkkm92xqkvrms88axkj\noasis1qq9meupznk90d4lgluvcaqa27ggs55dscc6msc33\noasis1qq9acq6v5knfmatc9fvuwyzlexs0f7j3uvarusu6\noasis1qqxqlpfslwuuh5342qnstymyutancj7csucxv2ec\noasis1qqxmp9lggptm0pt23za7g5cfg2hzspezcumw7c3j\noasis1qq89qxh538sunk6p2fca487pfsy0ncxk9q4xf2un\noasis1qq8hgj2yzssawtpfqr8utj6d57k9zvx3wc989kqm\noasis1qq8atykwecy3p5rnspkweapzz847exaqwyv80wgx\noasis1qqgv5rxl4w27l89rf4j5dv8392kh42wt35yn0as6\noasis1qqg0h3mt7klha4w2kxjvsktv5ke6suuwpg8rvpdh\noasis1qqf3ctyg49tnwclksxun3dzhrv4zuww7hu7w3cul\noasis1qqfasfrrx2tae50kcy8mcclhp0kqymswsqnqytyg\noasis1qq2rlaz3yjfk8gtdhnrfkrz5rrxjnnrzeq7mst0r\n\n... output trimmed ...\n")),(0,o.kt)("p",null,"For more information on account's address format, see the\n",(0,o.kt)("a",{parentName:"p",href:"/core/consensus/services/staking#accounts"},"Accounts")," section of the staking service documentation."),(0,o.kt)("h3",{id:"nonce"},(0,o.kt)("inlineCode",{parentName:"h3"},"nonce")),(0,o.kt)("p",null,"To get more a particular staking account's, e.g.\n",(0,o.kt)("inlineCode",{parentName:"p"},"oasis1qrvsa8ukfw3p6kw2vcs0fk9t59mceqq7fyttwqgx"),", nonce, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node stake account nonce \\\n  --address unix:/path/to/node/internal.sock \\\n  --stake.account.address oasis1qrvsa8ukfw3p6kw2vcs0fk9t59mceqq7fyttwqgx\n")),(0,o.kt)("h4",{id:"get-your-entitys-nonce"},"Get Your Entity's Nonce"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This example assumes you have the ",(0,o.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq/"},"jq")," tool installed on your system.")),(0,o.kt)("p",null,"If you want to get your entity's nonce, you can use the following combination of commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ENTITY_DIR=<PATH-TO-YOUR-ENTITY>\nADDRESS=$(oasis-node stake pubkey2address --public_key \\\n  $(cat $ENTITY_DIR/entity.json | jq .id -r))\nNONCE=$(oasis-node stake account nonce --stake.account.address $ADDRESS --address unix:/path/to/node/internal.sock)\n")),(0,o.kt)("p",null,"where ",(0,o.kt)("inlineCode",{parentName:"p"},"<PATH-TO-YOUR-ENTITY>")," is the path to your entity's descriptor, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"/serverdir/node/entity/"),"."),(0,o.kt)("h3",{id:"pubkey2address"},(0,o.kt)("inlineCode",{parentName:"h3"},"pubkey2address")),(0,o.kt)("p",null,"Run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"oasis-node stake pubkey2address --public_key <public_key>\n")),(0,o.kt)("p",null,"to get ",(0,o.kt)("a",{parentName:"p",href:"/core/consensus/services/staking#accounts"},"staking account address")," from an entity or the node's\npublic key. Example response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"oasis1qqncl383h8458mr9cytatygctzwsx02n4c5f8ed7\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can find your entity's ID in the ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," field of the ",(0,o.kt)("inlineCode",{parentName:"p"},"entity.json")," file.")),(0,o.kt)("h3",{id:"gen_transfer"},(0,o.kt)("inlineCode",{parentName:"h3"},"gen_transfer")),(0,o.kt)("p",null,"Let's assume:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6")," is our staking account\naddress,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis1qr3jc2yfhszpyy0daha2l9xjlkrxnzas0uaje4t3")," is the destination's staking\naccount address.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To convert your entity's ID to a staking account address, see the\n",(0,o.kt)("a",{parentName:"p",href:"#pubkey2address"},"Obtain Account Address From Entity's ID")," section.")),(0,o.kt)("h4",{id:"query-our-accounts-info"},"Query Our Account's Info"),(0,o.kt)("p",null,"To query our staking account's information, use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node stake account info \\\n  --address unix:/path/to/node/internal.sock \\\n  --stake.account.address oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For a detailed explanation on querying account information, see the\n",(0,o.kt)("a",{parentName:"p",href:"#info"},"Get Info")," section.")),(0,o.kt)("p",null,"Before the transaction, this outputs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: ROSE 601.492492765\n  Nonce:   7\nEscrow Account:\n  Active:\n    Balance:      ROSE 11242.38481664\n    Total Shares: 10000000000000\n  Debonding:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  ...\n")),(0,o.kt)("p",null,"We can observe that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"General account's balance is ~601 tokens."),(0,o.kt)("li",{parentName:"ul"},"Account's nonce is 7."),(0,o.kt)("li",{parentName:"ul"},"~","11242 tokens are actively bounded to the escrow account."),(0,o.kt)("li",{parentName:"ul"},"The amount of tokens that are currently debonding is 0.")),(0,o.kt)("h4",{id:"query-destination-accounts-info"},"Query Destination Account's Info"),(0,o.kt)("p",null,"To query the destination account's information, use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node stake account info \\\n  --address unix:/path/to/node/internal.sock \\\n  --stake.account.address oasis1qr3jc2yfhszpyy0daha2l9xjlkrxnzas0uaje4t3\n")),(0,o.kt)("p",null,"Before the transaction, this outputs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: ROSE 0.0\n  Nonce:   1030\nEscrow Account:\n  Active:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  Debonding:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  ...\n")),(0,o.kt)("p",null,"We can observe that both, the general account and the escrow account (actively\nbounded and debonding), have a balance of 0 tokens."),(0,o.kt)("h4",{id:"generate-a-transfer-transaction"},"Generate a Transfer Transaction"),(0,o.kt)("p",null,"Let's generate a transfer transaction of 170 tokens, (i.e. 170 * 10^9 base\nunits), from our account to the chosen destination account and store it to\n",(0,o.kt)("inlineCode",{parentName:"p"},"tx_transfer.json"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'oasis-node stake account gen_transfer \\\n  "${TX_FLAGS[@]}" \\\n  --stake.amount 170000000000 \\\n  --stake.transfer.destination oasis1qr3jc2yfhszpyy0daha2l9xjlkrxnzas0uaje4t3 \\\n  --transaction.file tx_transfer.json \\\n  --transaction.nonce 7 \\\n  --transaction.fee.gas 1000 \\\n  --transaction.fee.amount 2000\n')),(0,o.kt)("p",null,"This will output a preview of the generated transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"You are about to sign the following transaction:\n  Nonce:  7\n  Fee:\n    Amount: ROSE 0.000002\n    Gas limit: 1000\n    (gas price: ROSE 0.000000002 per gas unit)\n  Method: staking.Transfer\n  Body:\n    To:     oasis1qr3jc2yfhszpyy0daha2l9xjlkrxnzas0uaje4t3\n    Amount: ROSE 170.0\nOther info:\n  Genesis document's hash: 976c302f696e417bd861b599e79261244f4391f3887a488212ee122ca7bbf0a8\n")),(0,o.kt)("p",null,"and ask you for confirmation."),(0,o.kt)("h4",{id:"submit-the-transaction"},"Submit the Transaction"),(0,o.kt)("p",null,"To submit the generated transaction, we need to copy ",(0,o.kt)("inlineCode",{parentName:"p"},"tx_transfer.json")," to the\nonline Oasis node (i.e. the ",(0,o.kt)("inlineCode",{parentName:"p"},"server"),") and submit it from there:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node consensus submit_tx \\\n  --address unix:/path/to/node/internal.sock \\\n  --transaction.file tx_transfer.json\n")),(0,o.kt)("h4",{id:"query-both-accounts-info"},"Query Both Accounts' Info"),(0,o.kt)("p",null,"Let's check both accounts' info, first ours:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: ROSE 431.492490765\n  Nonce:   8\nEscrow Account:\n  Active:\n    Balance:      ROSE 11242.38481664\n    Total Shares: 10000000000000\n  Debonding:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  ...\n")),(0,o.kt)("p",null,"and then the destination's:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: ROSE 170.0\n  Nonce:   1030\nEscrow Account:\n  Active:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  Debonding:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  ...\n")),(0,o.kt)("p",null,"We can observe that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Our general balance decreased by 170.000002 tokens. The 0.000002 token corresponds to the fee that we specified we will pay for this transaction."),(0,o.kt)("li",{parentName:"ul"},"Our account's nonce increased to 8."),(0,o.kt)("li",{parentName:"ul"},"Destination account's general balance increased by 170 tokens.")),(0,o.kt)("h3",{id:"gen_escrow"},(0,o.kt)("inlineCode",{parentName:"h3"},"gen_escrow")),(0,o.kt)("p",null,"Let's assume:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"we want to stake (i.e. self-delegate) 208 tokens,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw")," is our staking account\naddress.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Minimum delegation amount is specified by the ",(0,o.kt)("inlineCode",{parentName:"p"},"staking.params.min_delegation"),"\nconsensus parameter."),(0,o.kt)("p",{parentName:"admonition"},"To obtain its value from the genesis file, run:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cat $GENESIS_FILE | \\\n  python3 -c \'import sys, json; \\\n  print(json.dumps(json.load(sys.stdin)["staking"]["params"]["min_delegation"], indent=4))\'\n')),(0,o.kt)("p",{parentName:"admonition"},"Note that this value is in base units. E.g., a value of ",(0,o.kt)("inlineCode",{parentName:"p"},'"10000000000"')," would\ncorrespond to 10 tokens.")),(0,o.kt)("p",null,"To achieve this we need to put 208 tokens to our own escrow account."),(0,o.kt)("h4",{id:"query-our-accounts-info-1"},"Query Our Account's Info"),(0,o.kt)("p",null,"To query our staking account's information, use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node stake account info \\\n  --address unix:/path/to/node/internal.sock \\\n  --stake.account.address oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For a detailed explanation on querying account information, see the\n",(0,o.kt)("a",{parentName:"p",href:"#info"},"Get Info")," section.")),(0,o.kt)("p",null,"Before the transaction, this outputs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: ROSE 431.492490765\n  Nonce:   8\nEscrow Account:\n  Active:\n    Balance:      ROSE 11242.38481664\n    Total Shares: 10000000000000\n  Debonding:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  ...\n")),(0,o.kt)("p",null,"We can observe that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"General account's balance is ~431 tokens."),(0,o.kt)("li",{parentName:"ul"},"Account's nonce is 8."),(0,o.kt)("li",{parentName:"ul"},"~11242 tokens are actively bounded to the escrow account."),(0,o.kt)("li",{parentName:"ul"},"The amount of tokens that are currently debonding is 0.")),(0,o.kt)("h4",{id:"generate-an-escrow-transaction"},"Generate an Escrow Transaction"),(0,o.kt)("p",null,"Let's generate an escrow transaction of 208 tokens (i.e. 208 * 10^9 base units)\nto our own escrow account and store it to ",(0,o.kt)("inlineCode",{parentName:"p"},"tx_escrow.json"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'oasis-node stake account gen_escrow \\\n  "${TX_FLAGS[@]}" \\\n  --stake.amount 208000000000 \\\n  --stake.escrow.account oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6 \\\n  --transaction.file tx_escrow.json \\\n  --transaction.nonce 8 \\\n  --transaction.fee.gas 1000 \\\n  --transaction.fee.amount 2000\n')),(0,o.kt)("p",null,"This will output a preview of the generated transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"You are about to sign the following transaction:\n  Nonce:  8\n  Fee:\n    Amount: ROSE 0.000002\n    Gas limit: 1000\n    (gas price: ROSE 0.000000002 per gas unit)\n  Method: staking.AddEscrow\n  Body:\n    Account: oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6\n    Amount:  ROSE 208.0\nOther info:\n  Genesis document's hash: 976c302f696e417bd861b599e79261244f4391f3887a488212ee122ca7bbf0a8\n")),(0,o.kt)("p",null,"and ask you for confirmation."),(0,o.kt)("h4",{id:"submit-the-transaction-1"},"Submit the Transaction"),(0,o.kt)("p",null,"To submit the generated transaction, we need to copy ",(0,o.kt)("inlineCode",{parentName:"p"},"tx_escrow.json")," to the\nonline Oasis node (i.e. the ",(0,o.kt)("inlineCode",{parentName:"p"},"server"),") and submit it from there:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node consensus submit_tx \\\n  --address unix:/path/to/node/internal.sock \\\n  --transaction.file tx_escrow.json\n")),(0,o.kt)("h4",{id:"query-our-accounts-info-again"},"Query Our Account's Info Again"),(0,o.kt)("p",null,"Let's check our account's info again:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: ROSE 223.492486765\n  Nonce:   9\nEscrow Account:\n  Active:\n    Balance:      ROSE 11450.38481664\n    Total Shares: 10185014125910\n  Debonding:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  ...\n")),(0,o.kt)("p",null,"We can observe that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Our general account's balance decreased by 208.000002 tokens. The 0.000002\ntoken corresponds to the fee that we specified we will pay for this transaction."),(0,o.kt)("li",{parentName:"ul"},"Our account's nonce increased to 9."),(0,o.kt)("li",{parentName:"ul"},"Our escrow account's active balance increased by 208 tokens."),(0,o.kt)("li",{parentName:"ul"},"The total number of shares in our escrow account's active part increased from\n10,000,000,000,000 to 10,185,014,125,910.")),(0,o.kt)("h4",{id:"computation-of-shares"},"Computation of Shares"),(0,o.kt)("p",null,"When a delegator delegates some amount of tokens to a staking account, the\ndelegator receives the number of shares proportional to the current\n",(0,o.kt)("strong",{parentName:"p"},"share price")," (in tokens) calculated from the total number of tokens delegated\nto a staking account so far and the number of shares issued so far:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"shares_per_token = account_issued_shares / account_delegated_tokens\n")),(0,o.kt)("p",null,"In our case, the current share price (i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"shares_per_token"),") is\n10,000,000,000,000 / 11242.384816640 which is 889,490,989.9542729 shares per\ntoken."),(0,o.kt)("p",null,"For 208 tokens, the amount of newly issued shares is thus\n208 * 889,490,989.9542729 which is 185,014,125,910.48877 shares\n(rounded to 185,014,125,910 shares)."),(0,o.kt)("p",null,"Hence, the escrow account's total number of shares increased by 185,014,125,910\nshares."),(0,o.kt)("h3",{id:"gen_reclaim_escrow"},(0,o.kt)("inlineCode",{parentName:"h3"},"gen_reclaim_escrow")),(0,o.kt)("p",null,"When we want to reclaim escrowed tokens, we can't do that directly. Instead, we\nneed to specify the number of shares we want to reclaim from an escrow account."),(0,o.kt)("p",null,"Let's assume:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"we want to reclaim 357 billion shares from our escrow account,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw"),"is our staking account address.")),(0,o.kt)("h4",{id:"query-our-accounts-info-2"},"Query Our Account's Info"),(0,o.kt)("p",null,"To query our staking account's information, use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node stake account info \\\n  --address unix:/path/to/node/internal.sock \\\n  --stake.account.address oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For a detailed explanation on querying account information, see the\n",(0,o.kt)("a",{parentName:"p",href:"#info"},"Get Info")," section.")),(0,o.kt)("p",null,"Before the transaction, this outputs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: ROSE 223.492486765\n  Nonce:   9\nEscrow Account:\n  Active:\n    Balance:      ROSE 11450.38481664\n    Total Shares: 10185014125910\n  Debonding:\n    Balance:      ROSE 0.0\n    Total Shares: 0\n  ...\n")),(0,o.kt)("p",null,"We can observe that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"General account's balance is ~223 tokens."),(0,o.kt)("li",{parentName:"ul"},"Account's nonce is 9."),(0,o.kt)("li",{parentName:"ul"},"~11450 tokens are actively bounded to the escrow account."),(0,o.kt)("li",{parentName:"ul"},"The amount of tokens that are currently debonding is 0.")),(0,o.kt)("h4",{id:"generate-a-reclaim-escrow-transaction"},"Generate a Reclaim Escrow Transaction"),(0,o.kt)("p",null,"Let's generate a reclaim escrow transaction of 357 billion shares from our own\nescrow account and store it to ",(0,o.kt)("inlineCode",{parentName:"p"},"tx_reclaim.json"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'oasis-node stake account gen_reclaim_escrow \\\n  "${TX_FLAGS[@]}" \\\n  --stake.shares 357000000000 \\\n  --stake.escrow.account oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6 \\\n  --transaction.file tx_reclaim.json \\\n  --transaction.nonce 9 \\\n  --transaction.fee.gas 1000 \\\n  --transaction.fee.amount 2000\n')),(0,o.kt)("p",null,"This will output a preview of the generated transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"You are about to sign the following transaction:\n  Nonce:  9\n  Fee:\n    Amount: ROSE 0.000002\n    Gas limit: 1000\n    (gas price: ROSE 0.000000002 per gas unit)\n  Method: staking.ReclaimEscrow\n  Body:\n    Account: oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6\n    Shares:  357000000000\nOther info:\n  Genesis document's hash: 976c302f696e417bd861b599e79261244f4391f3887a488212ee122ca7bbf0a8\n")),(0,o.kt)("p",null,"and ask you for confirmation."),(0,o.kt)("h4",{id:"submit-the-transaction-2"},"Submit the Transaction"),(0,o.kt)("p",null,"To submit the generated transaction, we need to copy ",(0,o.kt)("inlineCode",{parentName:"p"},"tx_reclaim.json")," to the\nonline Oasis node (i.e. the ",(0,o.kt)("inlineCode",{parentName:"p"},"server"),") and submit it from there:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node consensus submit_tx \\\n  --address unix:/path/to/node/internal.sock \\\n  --transaction.file tx_reclaim.json\n")),(0,o.kt)("h4",{id:"query-our-accounts-info-again-1"},"Query Our Account's Info Again"),(0,o.kt)("p",null,"Let's check our account's info again:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"General Account:\n  Balance: ROSE 223.492486765\n  Nonce:   10\nEscrow Account:\n  Active:\n    Balance:      ROSE 11049.031678686\n    Total Shares: 9828014125910\n  Debonding:\n    Balance:      ROSE 401.353137954\n    Total Shares: 401353137954\n  ...\n")),(0,o.kt)("p",null,"We can observe that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Our general account's balance decreased by 0.000002 token. This corresponds to\nthe fee that we specified we will pay for this transaction."),(0,o.kt)("li",{parentName:"ul"},"Our account's nonce increased to 10."),(0,o.kt)("li",{parentName:"ul"},"Our escrow account's active number of shares decreased by 357 billion shares\nto 9,828,014,125,910."),(0,o.kt)("li",{parentName:"ul"},"Our escrow account's active balance decreased by 401.353137954 tokens and\nis now 11049.031678686 tokens."),(0,o.kt)("li",{parentName:"ul"},"Our escrow account's debonding balance increased to 401.353137954 tokens\nand its number of shares to the same amount.")),(0,o.kt)("h4",{id:"computation-of-reclaimed-tokens"},"Computation of Reclaimed Tokens"),(0,o.kt)("p",null,"When a delegator wants to reclaim a certain number of escrowed tokens, the\n",(0,o.kt)("strong",{parentName:"p"},"token price")," (in shares) must be calculated based on the escrow account's\ncurrent active balance and the number of issued shares:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tokens_per_share = account_delegated_tokens / account_issued_shares\n")),(0,o.kt)("p",null,"In our case, the current token price (i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"tokens_per_share"),") is\n11450.384816640 / 10,185,014,125,910 which is 1.124238481664054 * 10^-9 token\nper share."),(0,o.kt)("p",null,"For 357 billion shares, the amount of tokens that will be reclaimed is thu\n357 ",(0,o.kt)("em",{parentName:"p"}," 10^9 ")," 1.124238481664054 * 10^-9 which is 401.35313795406726 tokens\n(rounded to 401.353137954 tokens)."),(0,o.kt)("p",null,"Hence, the escrow account's active balance decreased by 401.353137954 tokens and\nthe debonding balance increased by the same amount."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"While the number of debonding shares currently equals the number of base units\nthat are currently subject to debonding and hence, the amount of tokens we can\nexpect to reclaim after debonding period is over is a little over 401 tokens,\nthere is no guarantee that this stays the same until the end of the debonding\nperiod. Any slashing (e.g. for double signing) could change shares' price.")),(0,o.kt)("h4",{id:"debonding-period"},"Debonding Period"),(0,o.kt)("p",null,"The debonding period is specified by the ",(0,o.kt)("inlineCode",{parentName:"p"},"staking.params.debonding_interval"),"\nconsensus parameter and is represented as a number of epochs that need to pass."),(0,o.kt)("p",null,"To obtain its value from the genesis file, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cat $GENESIS_FILE | \\\n  python3 -c \'import sys, json; \\\n  print(json.load(sys.stdin)["staking"]["params"]["debonding_interval"])\'\n')),(0,o.kt)("p",null,"For our example network, this returns:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"10\n")),(0,o.kt)("p",null,"After the debonding period has passed, the network will automatically move an\nescrow account's debonding balance into the general account."),(0,o.kt)("h3",{id:"gen_cast_vote"},(0,o.kt)("inlineCode",{parentName:"h3"},"gen_cast_vote")),(0,o.kt)("h4",{id:"listing-active-proposals"},"Listing Active Proposals"),(0,o.kt)("p",null,"In order to list all active governance proposals, you can use the following\ncommand:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node governance list_proposals --address unix:/path/to/node/internal.sock\n")),(0,o.kt)("p",null,"In case there are currently any active proposals this should return a list of\nthem similar to the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'[{\n    "id":1,\n    "submitter":"oasis1qrs2dl6nz6fcxxr3tq37laxlz6hxk6kuscnr6rxj",\n    "state":"active",\n    "deposit":"10000000000000",\n    "content":{\n        "upgrade":{\n            "v":1,\n            "handler":"1304_testnet_upgrade",\n            "target":{\n                "runtime_host_protocol":{"major":2},\n                "runtime_committee_protocol":{"major":2},\n                "consensus_protocol":{"major":4}\n            },\n            "epoch":5662\n        }\n    },\n    "created_at":5633,\n    "closes_at":5645\n}]\n')),(0,o.kt)("h4",{id:"view-votes-for-a-proposal"},"View Votes for a Proposal"),(0,o.kt)("p",null,"To view votes for a given proposal, you can use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node governance proposal_votes \\\n  --address unix:/path/to/node/internal.sock \\\n  --proposal.id <PROPOSAL-ID>\n")),(0,o.kt)("p",null,"replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"<PROPOSAL-ID>")," with the id of the proposal you want see."),(0,o.kt)("p",null,"It should return a list of cast votes for the chosen proposal similar to the\nfollowing:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'[\n  {\n    "voter": "oasis1qq2vzcvxn0js5unsch5me2xz4kr43vcasv0d5eq4",\n    "vote": "yes"\n  },\n  {\n    "voter": "oasis1qqv25adrld8jjquzxzg769689lgf9jxvwgjs8tha",\n    "vote": "yes"\n  },\n  {\n    "voter": "oasis1qz2tg4hsatlxfaf8yut9gxgv8990ujaz4sldgmzx",\n    "vote": "yes"\n  },\n  {\n    "voter": "oasis1qz424yg28jqmgfq3xvly6ky64jqnmlylfc27d7cp",\n    "vote": "no"\n  },\n  {\n    "voter": "oasis1qr37y56g92chzvsew54kj7gu47cxyly7jytt5rm0",\n    "vote": "yes"\n  }\n]\n')),(0,o.kt)("h4",{id:"voting-for-a-proposal"},"Voting for a Proposal"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"At this time only entities which have active validator nodes scheduled in the\nvalidator set are eligible to vote for governance proposals.")),(0,o.kt)("p",null,"If you want to vote for an active proposal, you can use the following command to\ngenerate a suitable transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'oasis-node governance gen_cast_vote \\\n  "${TX_FLAGS[@]}" \\\n  --vote.proposal.id 1 \\\n  --vote yes \\\n  --transaction.file tx_cast_vote.json \\\n  --transaction.nonce 1 \\\n  --transaction.fee.gas 2000 \\\n  --transaction.fee.amount 2000\n')),(0,o.kt)("p",null,"This will output a preview of the generated transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"You are about to sign the following transaction:\n  Method: governance.CastVote\n  Body:\n    Proposal ID: 1\n    Vote:        yes\n  Nonce:  1\n  Fee:\n    Amount: 0.000002 ROSE\n    Gas limit: 2000\n    (gas price: 0.000000001 ROSE per gas unit)\nOther info:\n  Genesis document's hash: 9ce956ef5999024e148f0c21f1e8a05ab4fc98a44c4696b289770705aeb1dd77\n")),(0,o.kt)("p",null,"and ask you for confirmation."),(0,o.kt)("h4",{id:"submit-the-transaction-3"},"Submit the Transaction"),(0,o.kt)("p",null,"To submit the generated transaction, we need to copy ",(0,o.kt)("inlineCode",{parentName:"p"},"tx_cast_vote.json")," to the\nonline Oasis node (i.e. the ",(0,o.kt)("inlineCode",{parentName:"p"},"server"),") and submit it from there:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node consensus submit_tx \\\n  --address unix:/path/to/node/internal.sock \\\n  --transaction.file tx_cast_vote.json\n")),(0,o.kt)("h3",{id:"gen_amend_commission_schedule"},(0,o.kt)("inlineCode",{parentName:"h3"},"gen_amend_commission_schedule")),(0,o.kt)("p",null,"We can configure our account to take a commission on staking rewards given to\nour node(s). The ",(0,o.kt)("strong",{parentName:"p"},"commission rate")," must be within ",(0,o.kt)("strong",{parentName:"p"},"commission rate bounds"),",\nwhich we can also configure."),(0,o.kt)("p",null,"Let's assume:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"we want to change our commission rate bounds to allow us to set any rate\nbetween 0% - 25%, and"),(0,o.kt)("li",{parentName:"ul"},"change our commission rate to 10%,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6"),"is our staking account\naddress.")),(0,o.kt)("p",null,"We're not allowed to change the commission bounds too close in near future, so\nwe'd have to make changes a number of epochs in the future."),(0,o.kt)("h4",{id:"commission-schedule-rules"},"Commission Schedule Rules"),(0,o.kt)("p",null,"The commission schedule rules are specified by the\n",(0,o.kt)("inlineCode",{parentName:"p"},"staking.params.commission_schedule_rules")," consensus parameter."),(0,o.kt)("p",null,"To obtain its value from the genesis file, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cat $GENESIS_FILE | \\\n  python3 -c \'import sys, json; \\\n  rules = json.load(sys.stdin)["staking"]["params"]["commission_schedule_rules"]; \\\n  print(json.dumps(rules, indent=4))\'\n')),(0,o.kt)("p",null,"For our example network this returns:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "rate_change_interval": 1,\n    "rate_bound_lead": 336,\n    "max_rate_steps": 10,\n    "max_bound_steps": 10\n}\n')),(0,o.kt)("p",null,"This means that we must submit a commission rate bound at least 336 epochs in\nadvance (",(0,o.kt)("inlineCode",{parentName:"p"},"rate_bound_lead"),") and that we can change a commission rate on every\nepoch (",(0,o.kt)("inlineCode",{parentName:"p"},"rate_change_interval"),")."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"max_rate_steps")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"max_bound_steps")," determine the maximum number of\ncommission rate steps and rate bound steps, respectively."),(0,o.kt)("h4",{id:"query-our-accounts-info-3"},"Query Our Account's Info"),(0,o.kt)("p",null,"To query our staking account's information, use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node stake account info \\\n  --address unix:/path/to/node/internal.sock \\\n  --stake.account.address oasis1qr6swa6gsp2ukfjcdmka8wrkrwz294t7ev39nrw6\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For a detailed explanation on querying account information, see the\n",(0,o.kt)("a",{parentName:"p",href:"#show"},"Show account")," section.")),(0,o.kt)("p",null,"Before the transaction, this outputs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"General Account:\n  ...\n  Nonce:   10\nEscrow Account:\n  ...\n  Commission Schedule:\n    Rates: (none)\n    Rate Bounds: (none)\n  ...\n")),(0,o.kt)("p",null,"We can observe that:"),(0,o.kt)("p",null,"-Account's nonce is 10.\n-No commissions rates or bounds are currently set."),(0,o.kt)("h4",{id:"generate-an-amend-commission-schedule-transaction"},"Generate an Amend Commission Schedule Transaction"),(0,o.kt)("p",null,"In this example, we'll set the bounds to start on epoch 1500. An account's\ndefault bounds are 0% maximum, so we have to wait until our new bounds go into\neffect to raise our rate to 10%. Because of that, we'll specify that our rate\nalso starts on epoch 1500."),(0,o.kt)("p",null,"Let's generate an amend commission schedule transaction for this example and\nstore it to ",(0,o.kt)("inlineCode",{parentName:"p"},"tx_amend_commission_schedule.json"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'oasis-node stake account gen_amend_commission_schedule \\\n  "${TX_FLAGS[@]}" \\\n  --stake.commission_schedule.bounds 1500/0/25000 \\\n  --stake.commission_schedule.rates 1500/10000 \\\n  --transaction.file tx_amend_commission_schedule.json \\\n  --transaction.nonce 10 \\\n  --transaction.fee.gas 1000 \\\n  --transaction.fee.amount 2000\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Rates and minimum/maximum rates are in units of 1/100,000, so ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"50000"),", and\n",(0,o.kt)("inlineCode",{parentName:"p"},"100000")," come out to 0%, 50%, and 100%, respectively.")),(0,o.kt)("p",null,"This will output a preview of the generated transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"You are about to sign the following transaction:\n  Nonce:  10\n  Fee:\n    Amount: ROSE 0.000002\n    Gas limit: 1000\n    (gas price: ROSE 0.000000002 per gas unit)\n  Method: staking.AmendCommissionSchedule\n  Body:\n    Amendment:\n      Rates:\n        (1) start: epoch 1500\n            rate:  10.0%\n      Rate Bounds:\n        (1) start:        epoch 1500\n            minimum rate: 0.0%\n            maximum rate: 25.0%\nOther info:\n  Genesis document's hash: 976c302f696e417bd861b599e79261244f4391f3887a488212ee122ca7bbf0a8\n")),(0,o.kt)("p",null,"and ask you for confirmation."),(0,o.kt)("h4",{id:"submit-the-transaction-4"},"Submit the Transaction"),(0,o.kt)("p",null,"To submit the generated transaction, we need to copy\n",(0,o.kt)("inlineCode",{parentName:"p"},"tx_amend_commission_schedule.json")," to the online Oasis node (i.e. the ",(0,o.kt)("inlineCode",{parentName:"p"},"server"),")\nand submit it from there:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node consensus submit_tx \\\n  --address unix:/path/to/node/internal.sock \\\n  --transaction.file tx_amend_commission_schedule.json\n")),(0,o.kt)("h4",{id:"query-our-accounts-info-again-2"},"Query Our Account's Info Again"),(0,o.kt)("p",null,"Let's check our account's info again:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"General Account:\n  ...\n  Nonce:   11\nEscrow Account:\n  ...\n  Commission Schedule:\n    Rates:\n      (1) start: epoch 1500\n          rate:  10.0%\n    Rate Bounds:\n      (1) start:        epoch 1500\n          minimum rate: 0.0%\n          maximum rate: 25.0%\n  ...\n")),(0,o.kt)("p",null,"We can observe that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Our account's nonce increased to 11."),(0,o.kt)("li",{parentName:"ul"},"We set the commission rate of 10.0% to start on epoch 1500."),(0,o.kt)("li",{parentName:"ul"},"We set the commission rate bounds of 0% - 25% to also start on epoch 1500.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For more information on how commissions work in general, see the ",(0,o.kt)("a",{parentName:"p",href:"/general/manage-tokens/terminology#commission"},"Commission"),"\nexplanation in the ",(0,o.kt)("em",{parentName:"p"},"Use Your Tokens")," docs.")),(0,o.kt)("h4",{id:"setting-a-more-complex-commission-schedule"},"Setting a More Complex Commission Schedule"),(0,o.kt)("p",null,"It is also possible to set multiple commission rate steps and rate bound steps\nby passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"--stake.commission_schedule.rates")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"--stake.commission_schedule.bounds")," CLI flags multiple times."),(0,o.kt)("p",null,"For example, setting multiple commission rate steps and rate bound steps (for\nthe same account as in the previous example) as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'oasis-node stake account gen_amend_commission_schedule \\\n  "${TX_FLAGS[@]}" \\\n  --stake.commission_schedule.bounds 2000/10000/30000 \\\n  --stake.commission_schedule.bounds 3000/20000/40000 \\\n  --stake.commission_schedule.rates 2000/15000 \\\n  --stake.commission_schedule.rates 2200/20000 \\\n  --stake.commission_schedule.rates 2500/25000 \\\n  --stake.commission_schedule.rates 2800/30000 \\\n  --stake.commission_schedule.rates 3000/35000 \\\n  --transaction.file tx_amend_commission_schedule.json \\\n  --transaction.nonce 11 \\\n  --transaction.fee.gas 1000 \\\n  --transaction.fee.amount 2000\n')),(0,o.kt)("p",null,"would result in the following commission schedule being printed out in our\naccount's info:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"...\nEscrow Account:\n  ...\n  Commission Schedule:\n    Rates:\n      (1) start: epoch 1500\n          rate:  10.0%\n      (2) start: epoch 2000\n          rate:  15.0%\n      (3) start: epoch 2200\n          rate:  20.0%\n      (4) start: epoch 2500\n          rate:  25.0%\n      (5) start: epoch 2800\n          rate:  30.0%\n      (6) start: epoch 3000\n          rate:  35.0%\n    Rate Bounds:\n      (1) start:        epoch 1500\n          minimum rate: 0.0%\n          maximum rate: 25.0%\n      (2) start:        epoch 2000\n          minimum rate: 10.0%\n          maximum rate: 30.0%\n      (3) start:        epoch 3000\n          minimum rate: 20.0%\n          maximum rate: 40.0%\n  ...\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To troubleshoot an amendment that's rejected, consult our\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/oasisprotocol/oasis-core/blob/0dee03d75b3e8cfb36293fbf8ecaaec6f45dd3a5/go/staking/api/commission_test.go#L61-L610"},"compendium of 23 common ways for a commission schedule amendment to fail"),".")))}p.isMDXComponent=!0}}]);